class Student:
    def __init__(self, name, student_id):
        self.name = name
        self.student_id = student_id

class Course:
    def __init__(self, course_name, course_code, students=None):
        self.course_name = course_name
        self.course_code = course_code
        self.students = students if students is not None else []

    # Deep copy constructor
    def __deepcopy__(self, memo):
        new_course = Course(self.course_name, self.course_code, [])
        memo[id(self)] = new_course
        new_course.students = deepcopy(self.students, memo)
        return new_course

    # Method to drop a student by ID
    def dropStudent(self, student_id):
        for student in self.students:
            if student.student_id == student_id:
                self.students.remove(student)
                return True
        return False

# Example usage:
# Assuming c1 is an instance of the Course class
# c2 is a deep copy of c1
c2 = copy.deepcopy(c1)

# Drop a student with ID '123' from c1
c1.dropStudent('123')

# Print the students in c1 and c2 to verify deep copy
print("Students in c1:", [student.student_id for student in c1.students])
print("Students in c2:", [student.student_id for student in c2.students])
